#!/bin/bash

function print_usage() {
	echo "Use at any directory to create a subject directory"
	echo "Provide two arguments -- first argument - the subject's name"
	echo "                         second argument - the author's name"
}

function sanitize_latex() {
	safe=$(echo $1 | sed -e 's/\\/\\textbackslash{}/g')
	safe=$(echo $safe | sed -e 's/\^/\\textasciicircum{}/g')
	safe=$(echo $safe | sed -e 's/~/\\textasciitilde{}/g')
	safe=$(echo $safe | sed -e 's/</\\textless{}/g')
	safe=$(echo $safe | sed -e 's/>/\\textgreater{}/g')
	safe=$(echo $safe | sed -e 's/|/\\textbar{}/g')
	safe=$(echo $safe | sed -e 's/"/\\textquotedbl{}/g')
	safe=$(echo $safe | sed -e "s/'/\\\\textquotesingle{}/g")
	safe=$(echo $safe | sed -e 's/`/\\textasciigrave{}/g')
	safe=$(echo $safe | sed -e 's/[$&{}#_%]/\\&/g')
	safe=$(echo $safe | sed -e 's/\(\\[a-z]\+\)\\{\\}/\1{}/g')
	echo $safe
}

function create_makefile() {
	cd "$1"                                                                                                                                            >> /dev/null
	safe=$(echo $2 | sed 's/ /\\ /g')
	echo "all: $safe.pdf"                                                                                                                              >> makefile
	echo ""                                                                                                                                            >> makefile
	echo "$safe.pdf: $safe.tex resources.tex \$(shell find . -maxdepth 1 -type d -not -path . -exec find "{}" -type f -not -name "makefile" \; | sed 's/ /\\\\ /g')" >> makefile
	echo -e "\tmkdir -p aux/"                                                                                                                          >> makefile
	echo -e "\tpdflatex --aux-location=aux/ --output-directory=aux/ --interaction=nonstopmode $safe.tex"                                               >> makefile
	echo -e "\tpdflatex --aux-location=aux/ --output-directory=aux/ --interaction=nonstopmode $safe.tex"                                               >> makefile
	echo -e "\tcp aux/$safe.pdf $safe.pdf"                                                                                                             >> makefile
	echo -e "\trm -rf aux/"                                                                                                                            >> makefile
	echo ""                                                                                                                                            >> makefile
	echo "clean:"                                                                                                                                      >> makefile
	echo -e "\trm -rf *.pdf aux/ *.log *.aux"                                                                                                          >> makefile
	cd -                                                                                                                                               >> /dev/null
}

function create_resources_tex_file() {
	cd "$1"                                                            >> /dev/null
        echo "\\usepackage{fullpage} % Package to use full page" >> "resources.tex"
        echo "\\usepackage{parskip} % Package to tweak paragraph skipping" >> "resources.tex"
        echo "\\usepackage{tikz} % Package for drawing" >> "resources.tex"
        echo "\\usetikzlibrary{shapes,positioning,fit,calc}" >> "resources.tex"
        echo "\\usepackage{mathtools}" >> "resources.tex"
        echo "\\usepackage{amssymb}" >> "resources.tex"
        echo "\\usepackage[hidelinks]{hyperref}" >> "resources.tex"
        echo "\\usepackage{xifthen}" >> "resources.tex"
        echo "\\usepackage{dsfont}" >> "resources.tex"
        echo "\\usepackage{xparse}" >> "resources.tex"
        echo "\\usepackage{etoc}" >> "resources.tex"
        echo "\\usepackage{tcolorbox}" >> "resources.tex"
        echo "\\usepackage{enumitem}" >> "resources.tex"
        echo "\\usepackage{float}" >> "resources.tex"
        echo "\\usepackage{bookmark}" >> "resources.tex"
        echo "\\usepackage{amsmath}" >> "resources.tex"
        echo "\\usepackage{geometry}" >> "resources.tex"
        echo "\\usepackage{graphicx}" >> "resources.tex"
        echo "\\usepackage{caption}" >> "resources.tex"
        echo "\\usepackage{epstopdf}" >> "resources.tex"
        echo "\\usepackage{import}" >> "resources.tex"
        echo "\\usepackage{booktabs}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\set}{m o o}{%" >> "resources.tex"
        echo "\\IfNoValueTF{#2}{%" >> "resources.tex"
        echo "%no second argument" >> "resources.tex"
        echo "\\mathds{#1}" >> "resources.tex"
        echo "}{%" >> "resources.tex"
        echo "\\IfNoValueTF{#3}{%" >> "resources.tex"
        echo "%no third argument" >> "resources.tex"
        echo "\\mathds{#1}^{#2}" >> "resources.tex"
        echo "}{%" >> "resources.tex"
        echo "%all argument exists" >> "resources.tex"
        echo "\\mathds{#1}^{#2\\times #3}" >> "resources.tex"
        echo "}%" >> "resources.tex"
        echo "}%" >> "resources.tex"
        echo "}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\inset}{m o o}{%" >> "resources.tex"
        echo "\\in \\set{#1}[#2][#3]" >> "resources.tex"
        echo "}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\addlabel}{m m}{\\underbrace{#1}_{\\mathclap{\\text{#2}}}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\addtoplabel}{m m}{\\overbrace{#1}^{\\mathclap{\\text{#2}}}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\fixedlabel}{m m O{70pt}}{\\underbrace{#1}_{\\parbox{#3}{\\centering#2}}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\fixedtoplabel}{m m O{70pt}}{\\overbrace{#1}^{\\parbox{#3}{\\centering#2}}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\stretchlabel}{m m}{\\underbrace{#1}_{\\text{#2}}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\stretchtoplabel}{m m}{\\overbrace{#1}^{\\text{#2}}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\custombox}{m m m o O{black!50!gray} O{white} O{black!50!gray}}{%" >> "resources.tex"
        echo "\\IfNoValueTF{#4}{%" >> "resources.tex"
        echo "\\begin{tcolorbox}[title={\\subsubsection{#1: #2}}, colbacktitle=#5, coltitle=#6, colframe=#7]%" >> "resources.tex"
        echo "  #3%" >> "resources.tex"
        echo "\\end{tcolorbox}%" >> "resources.tex"
        echo "}{%" >> "resources.tex"
        echo "\\begin{tcolorbox}[title={\\subsubsection{#1: #2}}, label=#4, colbacktitle=#5, coltitle=#6, colframe=#7]%" >> "resources.tex"
        echo "  #3%" >> "resources.tex"
        echo "\\end{tcolorbox}%" >> "resources.tex"
        echo "}%" >> "resources.tex"
        echo "}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\example}{m m o}{\\custombox{Example}{#1}{#2}[#3]}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\definition}{m m o}{\\custombox{Definition}{#1}{#2}[#3][black!50!red][white][black!50!red]}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\theorem}{m m o}{\\custombox{Theorem}{#1}{#2}[#3][black!25!gray][white][black!25!gray]}" >> "resources.tex"
        echo "\\newcommand\\aug{\\fboxsep=-\\fboxrule\\!\\!\\!\\fbox{\\strut}\\!\\!\\!}" >> "resources.tex"
        echo "\\newcommand\\haug{\\rule[.5ex]{3.5em}{0.4pt}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\mymatrix}{m}{\\begin{bmatrix}#1\\end{bmatrix}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\note}{m O{gray}}{\\textcolor{#2}{#1}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\noteit}{m O{gray}}{\\textit{\\note{#1}[#2]}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\where}{m}{&& \\text{Where #1}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\norm}{m O{}}{\\lVert#1\\rVert_{#2}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\abs}{m}{\\left|#1\\right|}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\vectorset}{m O{n}}{\\{#1_{1}, \\dots, #1_{#2}\\}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\vectorsetextra}{m O{n}}{\\{#1_{1}, #1_{2}, \\dots, #1_{#2}\\}}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\centre}{m}{\\begin{center}#1\\end{center}}" >> "resources.tex"
        echo "\\newcommand\\overmat[2]{%" >> "resources.tex"
        echo "  \\makebox[0pt][l]{$\\smash{\\color{white}\\overbrace{\\phantom{%" >> "resources.tex"
        echo "    \\begin{matrix}#2\\end{matrix}}}^{\\text{\\color{black}#1}}}$}#2}" >> "resources.tex"
        echo "\\newcommand\\bovermat[2]{%" >> "resources.tex"
        echo "  \\makebox[0pt][l]{$\\smash{\\overbrace{\\phantom{%" >> "resources.tex"
        echo "    \\begin{matrix}#2\\end{matrix}}}^{\\text{#1}}}$}#2}" >> "resources.tex"
        echo "\\usepackage{listings}" >> "resources.tex"
        echo "\\usepackage{color} %red, green, blue, yellow, cyan, magenta, black, white" >> "resources.tex"
        echo "\\definecolor{mygreen}{RGB}{28,172,0} % color values Red, Green, Blue" >> "resources.tex"
        echo "\\definecolor{mylilas}{RGB}{170,55,241}" >> "resources.tex"
        echo "\\lstset{language=Matlab,%" >> "resources.tex"
        echo "    %basicstyle=\\color{red}," >> "resources.tex"
        echo "    breaklines=true,%" >> "resources.tex"
        echo "    morekeywords={matlab2tikz}," >> "resources.tex"
        echo "    keywordstyle=\\color{blue},%" >> "resources.tex"
        echo "    morekeywords=[2]{1}, keywordstyle=[2]{\\color{black}}," >> "resources.tex"
        echo "    identifierstyle=\\color{black},%" >> "resources.tex"
        echo "    stringstyle=\\color{mylilas}," >> "resources.tex"
        echo "    commentstyle=\\color{mygreen},%" >> "resources.tex"
        echo "    showstringspaces=false,%without this there will be a symbol in the places where there is a space" >> "resources.tex"
        echo "    numbers=left,%" >> "resources.tex"
        echo "    numberstyle={\\tiny \\color{black}},% size of the numbers" >> "resources.tex"
        echo "    numbersep=9pt, % this defines how far the numbers are from the text" >> "resources.tex"
        echo "    emph=[1]{for,end,break},emphstyle=[1]\\color{red}, %some words to emphasise" >> "resources.tex"
        echo "    %emph=[2]{word1,word2}, emphstyle=[2]{style}," >> "resources.tex"
        echo "}" >> "resources.tex"
        echo "\\usepackage{linegoal}" >> "resources.tex"
        echo "\\DeclareDocumentCommand{\\indent}{O{-} O{1em} O{t} m}{%" >> "resources.tex"
	echo "\\hspace*{#2} #1 \\begin{minipage}[#3]{\\linegoal}#4\\end{minipage}\\\\%" >> "resources.tex"
	echo "}" >> "resources.tex"
	cd -                                                               >> /dev/null
}

function create_subject_tex_file() {
	safeTitle=$(sanitize_latex "$2")
	safeAuthor=$(sanitize_latex "$3")
	cd "$2"                                                            >> /dev/null
	echo "\\documentclass[notitlepage]{report}"                        >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\makeatletter"                                              >> "$1.tex"
	echo "\\newcommand*{\\toccontents}{\\@starttoc{toc}}"              >> "$1.tex"
	echo "\\makeatother"                                               >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\input{\"resources.tex\"}"                                  >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\title{$safeTitle}"                                         >> "$1.tex"
	echo "\\author{$safeAuthor}"                                       >> "$1.tex"
	echo "\\date{$(date +%d/%m/%Y)}"                                   >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\graphicspath {}"                                           >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\begin{document}"                                           >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\maketitle"                                                 >> "$1.tex"
	echo "\\toccontents"                                               >> "$1.tex"
  echo "\\etocsettocstyle{}{} % from now on only local tocs"         >> "$1.tex"
	echo "\\etocsettocdepth{5}"                                        >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\bibliographystyle{plain}"                                  >> "$1.tex"
	echo "\\bibliography{bibliography.bib}"                            >> "$1.tex"
	echo "\\end{document}"                                             >> "$1.tex"
	cd -                                                               >> /dev/null
}

if [[ $# -ne 2 ]] || [ "$1" == "" ] || [ "$2" == "" ]; then
	print_usage
	exit 1
fi
if [ -d "$1" ]; then
	echo "Subject already exists, please enter a unique subject name"
	exit 1
fi

subjectName=$1
fileName="$1 Notes"
mkdir "$subjectName"

create_makefile "$subjectName" "$fileName"

create_resources_tex_file "$subjectName"

create_subject_tex_file "$fileName" "$subjectName" "$2"
