#!/bin/bash

function print_usage() {
	echo "Use at the top level directory of a setup subject"
	echo "Provide two arguments -- first argument - the chapter's name"
	echo "                         second argument - the author's name"
}

function sanitize_latex() {
	safe=$(echo $1 | sed -e 's/\\/\\textbackslash{}/g')
	safe=$(echo $safe | sed -e 's/\^/\\textasciicircum{}/g')
	safe=$(echo $safe | sed -e 's/~/\\textasciitilde{}/g')
	safe=$(echo $safe | sed -e 's/</\\textless{}/g')
	safe=$(echo $safe | sed -e 's/>/\\textgreater{}/g')
	safe=$(echo $safe | sed -e 's/|/\\textbar{}/g')
	safe=$(echo $safe | sed -e 's/"/\\textquotedbl{}/g')
	safe=$(echo $safe | sed -e "s/'/\\\\textquotesingle{}/g")
	safe=$(echo $safe | sed -e 's/`/\\textasciigrave{}/g')
	safe=$(echo $safe | sed -e 's/[$&{}#_%]/\\&/g')
	safe=$(echo $safe | sed -e 's/\(\\[a-z]\+\)\\{\\}/\1{}/g')
	echo $safe
}

function create_makefile() {
	cd "$2"                                                                                              >> /dev/null
	safe=$(echo $2 | sed 's/ /\\ /g')
	out=$(echo $1 | sed 's/ /\\ /g')
	echo "all: $safe.pdf"                                                                                >> makefile
	echo ""                                                                                              >> makefile
	echo "$safe.pdf: $safe.tex ../resources.tex \$(shell find contents/ -type f | sed 's/ /\\\\ /g')"                     >> makefile
	echo -e "\tmkdir -p aux/"                                                                            >> makefile
	echo -e "\tpdflatex --aux-location=aux/ --output-directory=aux/ --interaction=nonstopmode $safe.tex" >> makefile
	echo -e "\tpdflatex --aux-location=aux/ --output-directory=aux/ --ubteraction=nonstopmode $safe.tex" >> makefile
	echo -e "\tcp aux/$safe.pdf $out.pdf"                                                                >> makefile
	echo -e "\trm -rf aux/"                                                                              >> makefile
	echo ""                                                                                              >> makefile
	echo "clean:"                                                                                        >> makefile
	echo -e "\trm -rf *.pdf aux/ *.log *.aux"                                                            >> makefile
	cd -                                                                                                 >> /dev/null
}

function create_chapter_tex_file() {
	safeTitle=$(sanitize_latex "$2")
	safeAuthor=$(sanitize_latex "$3")
	cd "$1"                                                            >> /dev/null
	echo "\\documentclass[notitlepage]{article}"                       >> "$1.tex"
	echo ""                                                            >> "$1.tex"
  echo "\\makeatletter"                                              >> "$1.tex"
	echo "\\newcommand*{\\toccontents}{\\@starttoc{toc}}"              >> "$1.tex"
	echo "\\makeatother"                                               >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\input{\"../resources.tex\"}"                               >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\title{$safeTitle}"                                         >> "$1.tex"
	echo "\\author{$safeAuthor}"                                       >> "$1.tex"
	echo "\\date{$(date +%d/%m/%Y)}"                                   >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\graphicspath {{\"contents/\"}}"                            >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\begin{document}"                                           >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\maketitle"                                                 >> "$1.tex"
	echo "\\toccontents"                                               >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\subimport{contents/}{ChapterContents.tex}"                 >> "$1.tex"
	echo ""                                                            >> "$1.tex"
	echo "\\bibliographystyle{plain}"                                  >> "$1.tex"
	echo "\\bibliography{bibliography.bib}"                            >> "$1.tex"
	echo "\\end{document}"                                             >> "$1.tex"
	cd -                                                               >> /dev/null
}

function create_chapter_contents_file() {
	cd "$1"                             >> /dev/null
	mkdir contents
	echo "TODO: Write Chapter Contents" >> contents/ChapterContents.tex
	cd -                                >> /dev/null
}

function update_subject_tex() {
	safe=$(echo $1 | sed -e 's/[\/&]/\\&/g')
	folder=$3
	folderSafe=$(echo $folder | sed -e 's/[\/&]/\\&/g')
	safeTitle=$(sanitize_latex "$1" | sed -e 's/[\/&]/\\&/g')
	sed "s/\\graphicspath {/\\graphicspath {{\"$folderSafe\/contents\/\"}/" "$2 Notes.tex" > temp
	mv temp "$2 Notes.tex" #done this to get around a weird windows network security permission error when using sed -i
	sed "/bibliographystyle{plain}/i \\\\\\chapter{$safeTitle}\n\\\\localtableofcontents\n\\\\subimport{$folder/contents/}{ChapterContents.tex}\n" "$2 Notes.tex" > temp
	mv temp "$2 Notes.tex"
}

subject=${PWD##*/}

if [[ $# -ne 2 ]] || [ "$1" == "" ] || [ "$2" == "" ]; then
	print_usage
	exit 1
fi
chapterName=$1
noSpaceChapterName=$(echo $chapterName | sed -e 's/ //g')
if [ -d "$noSpaceChapterName" ]; then
	echo "Chapter already exists, please enter a unique chapter name"
	exit 1
fi
if [ ! -f "makefile" ] || [ ! -f "$subject Notes.tex" ]; then
	echo "Not in subject directory, please navigate to the top layer of a subject directory and retry"
	exit 1
fi

mkdir "$noSpaceChapterName"

create_makefile "$chapterName" "$noSpaceChapterName"

create_chapter_tex_file "$noSpaceChapterName" "$1" "$2"

create_chapter_contents_file "$noSpaceChapterName"

update_subject_tex "$chapterName" "$subject" "$noSpaceChapterName"
